&lt;?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom">
  <title>agonzalezro.github.io</title>
  <link href="http://agonzalezro.github.io" />
  <updated>2014-02-23T23:30:57Z</updated>

  
  
  <entry>
    <title>Hi all from my new blog engine!</title>
    <link href="http://agonzalezro.github.io/hi-all-from-my-new-blog-engine.html" />
    
    <updated>2014-02-23</updated>
    
    <summary>
    <p>After a really, really long time I am finally updating my old blog. Time ago I
tried to update it but I&rsquo;ve realised that a lot of JS of the site was
completely broken &amp; instead spend some time fixing it I&rsquo;ve decided to start it
from scratch with my own blog site generator:
<a href="http://github.com/agonzalezro/polo">Polo</a>.</p>

<p>I know that from a point of view of a software engineer, start something from
scratch when you have something that was already working, perhaps is not the
best of the ideas, but ehy! My blog, my rules :) And it&rsquo;s kinda tradition that
I develop a blog CMS every time that I learn a new language, with the only
difference that this time it&rsquo;s going to be an static one.</p>

<h2>Past</h2>

<p>Why I&rsquo;ve started my own? I was thinking a lot about this question and I only
found 2 points:</p>

<ul>
<li>As I said, I wanted to learn some Golang development, so, I made it with Go.</li>
<li>I think that the template inheritance in <a href="http://getpelican.com">Pelican</a> (my
old site generator, and a really really good piece of software) were a little
over complex for my needs.</li>
</ul>

<h2>Present</h2>

<p>As I said, my own blog generator was Pelican so I tried to keep Polo as much
compatible as possible with it:</p>

<ul>
<li>the default slugs are the same that Pelican generates to avoid 404s after the
migration.</li>
<li>the markdown metadata is exactly the same too.</li>
</ul>

<h2>Future</h2>

<p>There is few capabilities that I would like to implement ASAP:</p>

<ul>
<li>pagination.</li>
<li>generate html indexes for the tags.</li>
<li>a proper design that doesn&rsquo;t make it look extremely awful.</li>
<li>add the templates as part of the binary package.</li>
</ul>

<p>The generator is in a really early state which means that it can be some
errors. I was moving all my old posts too and I didn&rsquo;t manually try all of
them, so, it&rsquo;s possible that the content on some of them -specially images- is
broken too. Please, contact me if you find something.</p>

<p>I am open to suggestions, feel free of <a href="https://github.com/agonzalezro/polo/issues">create an
issue</a> and take a look to the ones
that are already open. Or just contact me on twitter:
<a href="http://twitter.com/agonzalezro">@agonzalezro</a>.</p>

    </summary>
    <author>
      <name>Álex</name>
    </author>
  </entry>
  
  <entry>
    <title>Python and Scala smoke the peace pipe</title>
    <link href="http://agonzalezro.github.io/python-and-scala-smoke-the-peace-pipe.html" />
    
    <updated>2013-05-13</updated>
    
    <summary>
    <p>This was my talk on the <a href="http://pygrunn.nl">PyGrunn</a> conference last
Friday.</p>

<p>I was explaining how can you communicate services written in different
languages using <a href="http://thrift.apache.org/">Apache Thrift</a> for that.</p>

<p>In few days the videos will be available, but TBH, I don&rsquo;t really know
if I will publish it here. It was not the first time that I talk in
public using English, but it will be the first time that it is
recorded&hellip; I don&rsquo;t really know if I want to see that! :D</p>

<p>I really need to improve my speed talking for the next time. I thought
that I will not have enough time to explain all, so, my subconscious
decided that I should be talking as a machine gun.</p>

<p>Below, you will find the slides, if not, <a href="https://speakerdeck.com/agonzalezro/python-and-scala-smoke-the-peace-pipe">try this
link</a>.</p>

<p>
PS: you can find the source code of the slides here
<a href="https://github.com/agonzalezro/slides/tree/master/thrift">[1]</a> &amp; the
source code of the demo here
<a href="https://github.com/agonzalezro/thriftest">[2]</a>.</p>

<p>Enjoy them!</p>

    </summary>
    <author>
      <name>Álex</name>
    </author>
  </entry>
  
  <entry>
    <title>Here I go PyGrunn&#39;13!</title>
    <link href="http://agonzalezro.github.io/here-i-go-pygrunn13.html" />
    
    <updated>2013-04-17</updated>
    
    <summary>
    <p>I am really proud of say that the next month I will be giving a talk at
PyGrunn!</p>

<p>This is a really good new for me because PyGrunn is the conference that
my old colleagues organize since years ago. I was on it first time in
2011 just one week after I started working at
<a href="http://paylogic.com">Paylogic</a>. I meet a lot of interesting people
there and I will see them again this year!</p>

<p>In 2012 I repeat, but at that time I had already started to organize the
&ldquo;Monthly PyGrunn&rdquo;s with <a href="http://twitter.com/_ivor">Ivor</a>. TBH that talks
were quite successful, and not for the quantity of people that we get
there, if not for the quality of them and the networking after!</p>

<p>I am really happy too because going there I will be able to see a lot of
friends that I miss! I just moved here 5 months ago but I really want to
see them!</p>

<p>Now, the less important thing: about the talk! I will be talking about
Thrift and how can we use it to talk between different applications in
different languages (in the examples: Python &amp; Scala). When PyGrunn
finish I think that I will have a video where you can see the talk (or
check my English) and I will upload the slides too!</p>

<p>Thanks to <a href="http://www.pygrunn.org">PyGrunn</a> for give me this chance!</p>

    </summary>
    <author>
      <name>Álex</name>
    </author>
  </entry>
  
  <entry>
    <title>TechTalk: from python 2.x to python 3</title>
    <link href="http://agonzalezro.github.io/techtalk-from-python-2x-to-python-3.html" />
    
    <updated>2013-02-12 00:30</updated>
    
    <summary>
    <h2>Introduction</h2>

<p>This are some notes that I took while the talk that I saw today, the
original title of the talk that I had the chance to see today was:
&ldquo;Switch to Python 3&hellip; Now&hellip; Inmediately&rdquo; by the <a href="http://www.russel.org.uk">professor Russel
Winder</a>.</p>

<p>More or less all that you will find here is a transaction, just ordered
in my style and perhaps with some notes by myself.</p>

<p>Python 2.x remains being the default python. Too many people and
organizations are afraid of the change.</p>

<p>Python software foundation should declare python 3 the default python
immediately.</p>

<h3>Problems</h3>

<ul>
<li>some big companies are telling people to don&rsquo;t use it.</li>
<li>some crucial projects are not using Python 3 yet.</li>
</ul>

<h3>Companies and people</h3>

<ul>
<li>from the point of view of Russel, the problem are those companies
that doesn&rsquo;t want to migrate, and not the fact that the code needs
to be migrate.</li>
<li>at least they should have version 2 and 3 compatible on the
codebase.</li>
</ul>

<h3>Migration</h3>

<ul>
<li><code>2to3</code> tool is not useful at all. Just one shot transform tool.</li>
<li>the manual the better? From my POV (Álex) you can never let a
machine this kind of work and it usually will be a biblical
proportion job for large codebases. And more important&hellip; usually
without tests :D</li>
</ul>

<h2>Justifications</h2>

<p>Python 2 is a dead end and python 3 is the developing future.</p>

<p>This piece of code is compatible with both versions, why don&rsquo;t use them?</p>

<pre><code class="python">print(x)
exec(x)
</code></pre>

<p>Problem: <code>print(x)</code> support multiple parameter in python 3, so, let&rsquo;s
import the function from future to have the same behaviour in python
2.x:</p>

<pre><code class="python">from __future__ import print_function
</code></pre>

<p>Let&rsquo;s make it bigger:</p>

<pre><code class="python">from __future__ import (
    division,
    absolute_import,
    print_function,
    unicode_literals
)
</code></pre>

<p>With this we will avoid problems with floats on divisions, add . to the
imports, import the python3 version of print and work always with
unicode.</p>

<p>Another problem is the list-comprehensions which will change a little
bit, instead create list, they will create sets.</p>

<h3>Some other problems</h3>

<p>python 2 is strict, but python 3 is kinda lazy.</p>

<pre><code class="python">map(lambda x: x * x, filter(lambda x: x % 10 == 0, range(100))
</code></pre>

<p>Will produce an iterator in python 3, in python 2 is a data structure.</p>

<p>This is one of the biggest issues into the migration, other functions
with same problems will be, for example: <code>items</code>, <code>keys</code>, <code>values</code>,
<code>iteritems</code>, <code>iterkeys</code> &amp; <code>itervalues</code> which in python 3 will become:
<code>items</code>, <code>keys</code> &amp; <code>values</code>.</p>

<p>If you want a data structure instead a iterator, you should make it
manually:</p>

<pre><code class="python">range(10)  # python 2.x
tuple(range(10)  # python 3
</code></pre>

<h3>Concurrency</h3>

<p>At least IronPython and Jython do not have a
<a href="http://wiki.python.org/moin/GlobalInterpreterLock">GIL</a> as CPython and
PyPy do.</p>

<p>There is an experiment to mode GIL out of PyPy.</p>

<p>Actors
:   communicate processes with messages.</p>

<p>Dataflow
:   operators connected by channels with activity triggered by arrival
    of data on the channels.</p>

<p>CSP
:   we have <a href="http://code.google.com/p/pycsp/">PyCSP</a> and
    <a href="https://github.com/python-concurrency/python-csp">PythonCSP</a>.</p>

<h3>Data parallelism</h3>

<p>Transform a sequence to another sequence where all individual actions
happen at the same time. Python has not a lot of utilities for that,
since Go or D do.</p>

<h3>Futures are the future</h3>

<p>concurrent.futures
:   python 3.2 package to abstract over threads and processes to give an
    asynchronous function call and future system.</p>

<h2>Under challengue</h2>

<ul>
<li>Go is taking over from Python, because it&rsquo;s native and it has a
solid concurrency models (CSP).</li>
<li>D is on the market too.</li>
<li>Native programs are almost always quicker than python.</li>
</ul>

<h2>Funny points</h2>

<ul>
<li>One rule of the guy is to use one month a year just <code>ed</code> no <code>vim</code> or
<code>emacs</code> rubbish.</li>
<li>C has a rubbish syntax in comparison with Python. You will touch
your head if you check some C++ code: why!?</li>
</ul>

    </summary>
    <author>
      <name>Álex</name>
    </author>
  </entry>
  
  <entry>
    <title>codereview from the POV of a noob</title>
    <link href="http://agonzalezro.github.io/codereview-from-the-pov-of-a-noob.html" />
    
    <updated>2013-01-29 19:16</updated>
    
    <summary>
    <p>Hi g(irl|uy)s! I would like to start with a disclaimer:</p>

<p><em>I am not (and I don&rsquo;t pretend to be) a craftmanship trooper (they like
to be called like that isn&rsquo;t?), senior engineer with more years of
experience that the technology has, guru, blablabla&hellip;</em></p>

<p><em>I just want to show my opinion about this process (which I really
like!). But more important that share my opinion, is to know what is
yours, so, please, comment!</em></p>

<p>Today we had an interesting conversation at work about how we make and
how we should make our codereviews. My point of view is that there are
three different things to check:</p>

<ol>
<li><strong>Code syntax.</strong> It&rsquo;s a part that should be 100% automagically done.
I usually work with python and I let this work to
<a href="http://pypi.python.org/pypi/flake8">Flake8</a> on vim, but it&rsquo;s always
good to have a git hook.</li>
<li><strong>Reusability and maintainability.</strong> I am afraid that this is the
worst part to check, it&rsquo;s a manual process and it is really
subjective. Some people can think that use itertools with 2 lambda
functions is pretty clear and comprehensible, other people can think
that this code is the result of a dirty mind developer.</li>
<li><strong>Functionality.</strong> Automated test! All the test that you can, and of
course, they worst the time that you will spent developing them.
There are things that can not be easily tested but in that case
let&rsquo;s suppose that you were clever enough to test them manually and
in the case that is possible you can show it to anybody else (this
really helps!).</li>
</ol>

<p>As I said the point 1 can be (and should be) automated! It&rsquo;s really easy
to do, the same way that <a href="http://pypi.python.org/pypi/flake8">Flake8</a>
exists for python, I am pretty sure that you will have one for your
favourite language. It&rsquo;s really painful get back a pull request just for
some spaces that are not in place.</p>

<p>For the point 3, yep, let me jump the second for now. Unit testing,
integration testing, functional testing&hellip; whatever you want, but try to
automate it. This + a CI server will make your live really &ldquo;easy&rdquo;!</p>

<p>And finally, about the second point. Each developer have their way to do
the things, but usually there are some points that can be fixed and
sometimes because we don&rsquo;t know, other times just because we are lazy
but we post code like this:</p>

<pre><code class="python">def f(a, b, c):
    if (a &lt; 1 and
        request.user and
        request.user.is_authenticated() and request.user.has_perm('write')
    ):
        return HttpResponse(json.dumps('{authorized: True, 'a': a}))
    if a &gt;= 1
        return HttpResponse(json.dumps('{authorized: True, 'a': a}))
</code></pre>

<p>This is just an example, but you should agree with me that it&rsquo;s really
easy to improve. This is what, in my opinion should be more checked in
the reviews.</p>

<p>This was just an example (please, remember that :D), but could be
improved with something like this:</p>

<pre><code class="python">def proper_function_name(proper_variable_name):
    &quot;&quot;&quot;This is an amazing function that will do just a thing.

    :param proper_variable_name: what I am?

    :returns: An HttpResponse object with the following JSON content:

        {'authorized': bool,
         'proper_variable_name: int}

    &quot;&quot;&quot;
    is_authorized = (
        request.user and
        request.user.is_authenticated() and
        request.user.has_perm('write-resource')
    )

    return HttpResponse(
        json.dumps({
            'authorized': is_authorized,
            'proper_variable_name': proper_variable_name
        })
    )
</code></pre>

<p>Those were the improvements (again, remember that it&rsquo;s just an example):</p>

<ol>
<li>Give a proper name to the function. Don&rsquo;t be afraid, everybody has
autocompletion! :D</li>
<li>Give a proper name to the vars.</li>
<li>DOCUMENT! In this example, ready for Sphinx.</li>
<li>Simplify the if statements, actually, after take a look you made it
dissapear.</li>
<li>One return.</li>
</ol>

<p>So, what&rsquo;s your opinion? What do you think that is more important in a
codereview.</p>

    </summary>
    <author>
      <name>Álex</name>
    </author>
  </entry>
  
  <entry>
    <title>Best vim colors ever!</title>
    <link href="http://agonzalezro.github.io/best-vim-colors-ever.html" />
    
    <updated>2013-01-23 23:52</updated>
    
    <summary>
    <p>Sometimes a developer needs a change, and what can you change better
that the color scheme that you use to develop? You are more than 8h per
day in front of your vim with some beautiful, or crappy, code in front
of you. In the first case the colors doesn&rsquo;t matter, but in the second
it&rsquo;s really important to enjoy, at least, the colors!</p>

<p>The colors scheme that you use is something really personal, but it
always help when somebody checked them and show them to you without the
embarrasment of doing it yourself, and this is what I will do, because I
was looking, but out of the amazing vimcolorschemetest project nobody
seems to give importance to this. This project is really good, but it
just show to you a bunch of colors without any order of preference, I
will fix that for you!</p>

<p>Below is the list of the colors that I&rsquo;ve tried that need some mention
here. The order is just alfabetically, not my preferences.</p>

<h2>My choices</h2>

<h3>bensday</h3>

<p><img src="static/vim/bensday.png" alt="image" />
</p>

<h3>clarity</h3>

<p><img src="static/vim/clarity.png" alt="image" />
</p>

<h3>desertEx</h3>

<p>It&rsquo;s really similar to deser, which comes by default</p>

<p><img src="static/vim/desertEx.png" alt="image" />
</p>

<h3>jelleybeans</h3>

<p>My favourite for now, but make me chnage my opinion</p>

<p><img src="static/vim/jelleybeans.png" alt="image" />
</p>

<h3>winsterday</h3>

<p><img src="static/vim/winsterday.png" alt="image" />
</p>

<p>I am currently using <em>jelleybeans</em> (after a recommendation of my
colleague Robin), I really like it, but a little bit &ldquo;happier&rdquo; colors
would not be bad either :)</p>

<h2>Find them!</h2>

<p>You can find all this colors and a lot more here:
<a href="https://github.com/flazz/vim-colorschemes">https://github.com/flazz/vim-colorschemes</a></p>

<p>Please, I am open to all the suggestion that you want, since the new
amazing color scheme for vim that I don&rsquo;t know yet, until the killer
plugin that I can not miss! And of course, if you want to codereview the
code that you see on the screenshots feel free too!</p>

    </summary>
    <author>
      <name>Álex</name>
    </author>
  </entry>
  
  <entry>
    <title>PyGrunn Winter Hackathon 2012</title>
    <link href="http://agonzalezro.github.io/pygrunn-winter-hackathon-2012.html" />
    
    <updated>2012-11-27</updated>
    
    <summary>
    <p>Few days ago, actually, more than one week ago (but I was very busy :)
we made our first <a href="http://paylogic.github.com/winter-hackathon/">PyGrunn
hackathon</a>. I was lucky
and from all the list of ideas, the selected was one of mines! The
slides generator, that finally we call <strong>hovercraft</strong>. Here is a small
introduction about what I wanted:</p>

<p><em>A small platform to create slides and have them always associated to a
web with this possibilities:</em></p>

<ul>
<li><em>Create an account with Google (or perhaps twitter, facebook&hellip;),
but Google seems the best option for me now.</em></li>

<li><p><em>Create or edit new slides related with this account. This slides
creator/editor will have the following functionalities:</em></p>

<ul>
<li><em>Select one image for background in fullscreen.</em></li>

<li><p><em>Write one or 2 lines of text that will always fulfill the width
of the slide.</em></p></li>

<li><p><em>Change the font family.</em></p></li>
</ul></li>

<li><p><em>Have a permanent link to your slide (completely public for now).</em></p></li>
</ul>

<p>After the hackathon we got something very similar to what I wanted, with
some small issues. But this post is not about what we did wrong! This
post is about which technologies did we use to finish the project and
perhaps, if I am lucky, start a discussion on why we did/didn&rsquo;t make a
good choice.</p>

<h2>How do we achieve this?</h2>

<h3>Backend</h3>

<p>The backend of the application was almost inexistent, we only wanted to
allow the users to login with a Google account to have access to edit
their slides. Being a hackathon we didn&rsquo;t spend time adding CRUD
(Create/Read/Update/Delete) functionalities to manage the users.</p>

<p>If you want to delete your user, let me know, I will do it by hand :) It
was made with <a href="http://flask.pocoo.org/">Flask</a>, Flask-OAuth for the
authentication with Google and <a href="http://redis.io/">redis</a> to store the
presentations.</p>

<h3>Frontend</h3>

<p>The viewer was really simply too because from the beginning we wanted to
play with the editor (it was more funny). For doing it we used
<a href="http://lab.hakim.se/reveal-js/#/">revealjs</a> to show the presentation
with slide effect and <a href="http://fittextjs.com/">jquery-fittext</a> to make it
fullslide.</p>

<p>Now the important part! We made the editor with <a href="http://agonzalezro.github.com/backbonejs-underscore-small-intro.html">backbone and
underscore</a>,
it seems to us the better choice, since we will have 3 principal views:</p>

<p>The background chooser
:   which is connection to <a href="http://www.deviantart.com/">deviantart</a> to
    perform a query of good backgrounds for your slide. Then you can
    click on one of the results and will be applied to the current
    slide.</p>

<p>The font chooser
:   which is loading some google fonts, we wanted to do this
    automagically but we couldn&rsquo;t finish it at time. The behaviour is
    the same, you choose a font and its applied to the current slide.</p>

<p>The slide content
:   that should be WYSIWYG (What You See Is What You Get) but for now is
    on the middle, because we couldn&rsquo;t make the text bigger while you
    are writing.</p>

<h3>Deployment</h3>

<p>And finally the deployment that was made with heroku and redistogo that
allows you to use a 5M non-persistant DB that is good for a demo.</p>

<h2>Resources</h2>

<ul>
<li>You can see the list of all the projects or&hellip;</li>
<li>You can find all the <a href="https://github.com/agonzalezro/hovercraft">source on
github</a> or&hellip;</li>
<li>You can <a href="http://nameless-spire-1402.herokuapp.com/">try a demo</a> too!</li>
<li>And if you are too lazy to try it, here you have an screenshot:</li>
</ul>

<p><img src="static/hovercraft.png%0A%20:width:%2066%%0A%20:align:%20center%0A%20:target:%20static/hovercraft.png" alt="image" />
</p>

<h2>Thanks!</h2>

<p>I really want to thank <a href="http://www.paylogic.nl">Paylogic</a> for letting us
a place where to do the project and for provide us food &amp; beers. What a
developer will develop without food and beer?</p>

<p>I want to thank too all the guys that &ldquo;spend&rdquo; the weekend with me having
fun, but working hard too!</p>

<h2>Conclusions</h2>

<p>The good point of all this editing is that thanks to backbone and thanks
to the backend guys is saved without any action needed. The idea of this
full project was:</p>

<ol>
<li><strong>Have fun!</strong></li>
<li>Simplifying slide creation</li>
<li>Make it really simply to share those slides.</li>
</ol>

<p>I didn&rsquo;t want to go really depth into the development of this project,
<strong>I only wanted to give a quick overview of what we made in two days.</strong>
But if you are really interested on something more explained, let me
know on the comments and I will try to help you in all what I can.</p>

    </summary>
    <author>
      <name>Álex</name>
    </author>
  </entry>
  
  <entry>
    <title>Fix low wifi speed on Linux (Ubuntu) with chip Atheros AR9285</title>
    <link href="http://agonzalezro.github.io/fix-low-wifi-speed-on-linux-ubuntu-with-chip-atheros-ar9285.html" />
    
    <updated>2011-07-03 13:07</updated>
    
    <summary>
    <p>I was very happer after buy my new computer Dell Vostro v130, but after
install Linux on it I&rsquo;ve realized that the download speed via WiFi was
very slow! To solve this I found two &ldquo;solutions&rdquo;, one of them works, but
the other not (for me).</p>

<p>The solutions that didn&rsquo;t work is more easy, so I will start with it,
you must install <code>linux-backports-modules-net-natty-generic</code>, you can do
it via synaptic, ubuntu software center, aptitude, apt&hellip; I show you a
screenshot doing it with ubuntu software center:</p>

<p><img src="static/software_center.png%0A%20:width:%2050%%0A%20:align:%20center%0A%20:target:%20static/software_center.png" alt="image" />
</p>

<p>The second &ldquo;solution&rdquo; is deactivate the hardware cryptography of the
module, I don&rsquo;t know if this could cause security problems or instead
use hardware it will use software crypt, anyway, it is the best
solutions that I find until the moment.</p>

<p>To do that, you must create the file <code>/etc/modprobe.d/ath9k.conf</code> with
the content: <code>options ath9k nohwcrypt=1</code>, you can do it easily with:</p>

<pre><code>echo &quot;options ath9k nohwcrypt=1&quot; &gt; /etc/modprobe.d/ath9k.conf
</code></pre>

<p>If you have any questions, or you find a better solution, please, let me
know.</p>

    </summary>
    <author>
      <name>Álex</name>
    </author>
  </entry>
  
  <entry>
    <title>I&#39;m starting to hate GNOME 3</title>
    <link href="http://agonzalezro.github.io/im-starting-to-hate-gnome-3.html" />
    
    <updated>2011-06-08 19:02</updated>
    
    <summary>
    <p>First of all, I&rsquo;m GNOME user as main desktop on Linux since the version
1.x (about 10 years ago). I&rsquo;ve played with another desktops but GNOME
was always in my heart. But now, with the arrival of GNOME 3 and after
two weeks using it I can say that I&rsquo;m starting to hate it. In this new
version it has a lot of functions that I don&rsquo;t like and doesn&rsquo;t have a
lot of functions that I like :)</p>

<p>After see my arguments, perhaps you can help me to change my opinion but
possibily my next post will treat about how erase GNOME 3 and go back to
Unity. Go to see them:</p>

<p><img src="static/fuuuu.jpg%0A%20:width:%2050%%0A%20:align:%20center%0A%20:target:%20static/fuuuu.jpg" alt="image" />
</p>

<h2>Dynamic virtual desktops</h2>

<p>I&rsquo;ve always used virtual desktops. One for terminals, antoher for
explorers, another for music and a extra one for all other stuff. When I
want to go to my explorer I push Alt+2 and change my virtual desktop to
2. But now, I can&rsquo;t do it, because if I want to open the explorers in
the desktop 2 I must open something in the desktop one, but I don&rsquo;t like
it!</p>

<p>This is a very big problem for me because I&rsquo;m not accustomed to use
Alt-Tab to change the windows.</p>

<h2>When you close the las window in a desktop&hellip;</h2>

<p>the gnome-shell will be open! I don&rsquo;t like it! Perhpas I&rsquo;ve closed this
window to go to my home folder, let me do that!</p>

<h2>Alt+F2 doesn&rsquo;t autocomplete</h2>

<p>GNOME always had this option instead KDE that didn&rsquo;t have it, and now,
they erase it? I can&rsquo;t understand why! I know that you can use the Super
key (the fuc***g windows key presented on all keyboards), but use the
gnome-shell to open a program isn&rsquo;t so quickly as open it with alt-f2.</p>

<h2>Autologin on GDM</h2>

<p>I like to suppose that this bug is only on my pc, because I&rsquo;ve tried to
configure my autologin user and never ever is autologued. Perhaps I
should submit a bug for this case.</p>

<h2>Difficulty to install extensions</h2>

<p>I will not say anything more about this.</p>

<h2>No autohide bar, and no more bars?</h2>

<p>I know that gnome-shell isn&rsquo;t thinked to do that, but perhaps they must
give a chance to do that to the users that like it.</p>

<p>And finally, one thing that happens with gnome-shell, gnome-do, meego
desktop&hellip; Why if you have hide files they appear on recent documents or
in the shell when you start to type? Of course&hellip; this hide files isn&rsquo;t
for p0rn, they are my personal documents only.</p>

    </summary>
    <author>
      <name>Álex</name>
    </author>
  </entry>
  
  <entry>
    <title>How-to install GNOME 3 instead of Unity on Ubuntu 11.04</title>
    <link href="http://agonzalezro.github.io/how-to-install-gnome-3-instead-of-unity-on-ubuntu-1104.html" />
    
    <updated>2011-06-08 18:28</updated>
    
    <summary>
    <p>I don&rsquo;t have anything against Unity, but sometimes I want to test, and
this is one of this times.</p>

<p>I don&rsquo;t know the reason (or perhaps I do), but install GNOME 3 on a
ubuntu system isn&rsquo;t as easy as it must be.</p>

<p>First of all we need to add the GNOME 3 repos, so, in a console (Alt+F2
and then write gnome-terminal) you must write:</p>

<pre><code>sudo add-apt-repository ppa:gnome3-team/gnome3
</code></pre>

<p>Then, we must update our system and install the gnome shell:</p>

<pre><code>sudo apt-get updatesudo apt-get dist-upgradesudo apt-get install gnome-shell
</code></pre>

<p>After that, sometimes we have problems with the themes (you can reboot
to test it, but I recommend you to follow this steps), so, we must
remove the accesibility themes and install the new ones (and another
program that we will need after that):</p>

<pre><code>sudo apt-get remove gnome-accessibility-themessudo apt-get install gnome-themes-standard gnome-tweak-tool
</code></pre>

<p>Well&hellip; now, you can reboot your system and login with GNOME selected as
session. You will see your new GNOME 3, but, we must tweak it, for this,
you can push Alt+F2 and write:</p>

<pre><code>gnome-tweak-tool
</code></pre>

<p>I recommend you to have this themes configuration (you can change the
icons if you like) and activate the option on the first tab called &ldquo;Have
file manager handle the desktop&rdquo;:</p>

<p><img src="static/tweak_tool.png%0A%20:width:%2050%%0A%20:align:%20center%0A%20:target:%20static/tweak_tool.png" alt="image" />
</p>

<p>Good luck! And if you have any trouble, please, feel free to ask me in
the comments!</p>

<p>PS: <a href="http://twitter.com/marioquartz">@marioquartz</a> wants to see the
result, so here it is (click to enlarge)!</p>

<p><img src="static/gnome3_desktop.png%0A%20:width:%2050%%0A%20:align:%20center%0A%20:target:%20static/gnome3_desktop.png" alt="image" />
</p>

    </summary>
    <author>
      <name>Álex</name>
    </author>
  </entry>
  
  
</feed>
