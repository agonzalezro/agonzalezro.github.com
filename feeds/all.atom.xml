<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Álex's blog</title><link href="http://agonzalezro.github.com/" rel="alternate"></link><link href="http://agonzalezro.github.com/feeds/all.atom.xml" rel="self"></link><id>http://agonzalezro.github.com/</id><updated>2012-11-06T19:30:00+01:00</updated><entry><title>Graphite, Carbon and Diamond</title><link href="http://agonzalezro.github.com/graphite-carbon-and-diamond.html" rel="alternate"></link><updated>2012-11-06T19:30:00+01:00</updated><author><name>Álex</name></author><id>tag:agonzalezro.github.com,2012-11-06:graphite-carbon-and-diamond.html</id><summary type="html">&lt;p&gt;Two days ago was my, sadly, last PyGrunn monthly meeting. Thanks to &lt;a class="reference external" href="http://www.linkedin.com/profile/view?id=17961952&amp;amp;locale=en_US&amp;amp;trk=tyah"&gt;Bram&lt;/a&gt; now
we know a little bit more about how to monitoring with Python applications.&lt;/p&gt;
&lt;p&gt;Below you will find the notes that I take to the people that couldn't assist to
the talk. But they are only that, some notes, don't expect to find a really cool
story on them. I am pretty sure that &lt;a class="reference external" href="/graphite.slides/graphite.html"&gt;the original slides made by Bram&lt;/a&gt; will help
you.&lt;/p&gt;
&lt;div class="section" id="why-graphite"&gt;
&lt;h2&gt;Why graphite?&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Dev friendly&lt;/li&gt;
&lt;li&gt;Ops friendly&lt;/li&gt;
&lt;li&gt;Growth friendly: very scalable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some important companies are using it: Instragram, Etsy, Github, &lt;a class="reference external" href="http://www.kalooga.com"&gt;Kalooga&lt;/a&gt; (this is the company where Bram is working :).&lt;/p&gt;
&lt;p&gt;It's a project created by &lt;a class="reference external" href="orbitz.com"&gt;Orbitz.com&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="ecosystem"&gt;
&lt;h2&gt;Ecosystem&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Graphite&lt;/dt&gt;
&lt;dd&gt;The tool that makes the graphs.&lt;/dd&gt;
&lt;dt&gt;Carbon&lt;/dt&gt;
&lt;dd&gt;Colects the statistics.&lt;/dd&gt;
&lt;dt&gt;Whisper&lt;/dt&gt;
&lt;dd&gt;Metrics &lt;cite&gt;RRD (Round Robin database)&lt;/cite&gt;.&lt;/dd&gt;
&lt;dt&gt;Diamond&lt;/dt&gt;
&lt;dd&gt;It's the metrics collector, they are others: CollectD, Munin, Ganglia... Of
course, you can develop yours.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="how-do-you-gate-the-data-in"&gt;
&lt;h2&gt;How do you gate the data in?&lt;/h2&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Create an HTTP connection to the server.&lt;/li&gt;
&lt;li&gt;Each line will be a data point.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you want namespaces you can always use dots &lt;cite&gt;.&lt;/cite&gt;. Example: &lt;cite&gt;pygrunn.load
[load] [now]&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="improvements"&gt;
&lt;h2&gt;Improvements&lt;/h2&gt;
&lt;p&gt;Why don't use statsd? It's a layer for Graphite that you can use to keep your
application running and send the data to statsd. If it can write it ok, if not,
you have a problem.&lt;/p&gt;
&lt;p&gt;The original implementation of StatsD is in Node.js but there are another
projects that do it with C (StatsD-c) or python (Bucky) or [write your prefered
language here].&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="uses"&gt;
&lt;h2&gt;Uses&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Open a &lt;cite&gt;dev&lt;/cite&gt; file and write directly to it.&lt;/li&gt;
&lt;li&gt;Open HTTP connection.&lt;/li&gt;
&lt;li&gt;Use a statsd decorator.&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="plots"&gt;
&lt;h2&gt;Plots&lt;/h2&gt;
&lt;p&gt;You can plot data with:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;JSON&lt;/li&gt;
&lt;li&gt;CSV&lt;/li&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;XML&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="api"&gt;
&lt;h2&gt;API&lt;/h2&gt;
&lt;p&gt;You can do funny things as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Check the registered users over past day in json data&lt;/li&gt;
&lt;li&gt;Keep track of your 404 errors&lt;/li&gt;
&lt;li&gt;...&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="where-is-the-data-store"&gt;
&lt;h2&gt;Where is the data store?&lt;/h2&gt;
&lt;p&gt;They are stored in files, in case that you run out of space this data will be
stored on the Carbon cache until something happen to it.a&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="functions"&gt;
&lt;h2&gt;Functions&lt;/h2&gt;
&lt;p&gt;You can filter results, for example mostDeviant (take a look to the slides to
see the screenshots that show the use).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="what-s-also-nice"&gt;
&lt;h2&gt;What's also nice?&lt;/h2&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;Sentry&lt;/dt&gt;
&lt;dd&gt;Error caching middleware that you can run with your WSGI application to
check the Exceptions and the stacktraces.&lt;/dd&gt;
&lt;dt&gt;Shinken&lt;/dt&gt;
&lt;dd&gt;It's also written in python and it's compatible with Nagios. It could be a
good complement to Graphite to show some alerts when the thing are really
wrong.&lt;/dd&gt;
&lt;dt&gt;New Relic&lt;/dt&gt;
&lt;dd&gt;It's a Web Application Performance Management (&lt;cite&gt;APM (Application
Performance Management&lt;/cite&gt;).&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
</summary><category term="graphite"></category><category term="carbon"></category><category term="diamond"></category><category term="monitoring"></category><category term="python"></category></entry><entry><title>backbone.js + underscore: small intro</title><link href="http://agonzalezro.github.com/backbonejs-underscore-small-intro.html" rel="alternate"></link><updated>2012-11-01T00:30:00+01:00</updated><author><name>Álex</name></author><id>tag:agonzalezro.github.com,2012-11-01:backbonejs-underscore-small-intro.html</id><summary type="html">&lt;p&gt;Today, &lt;a class="reference external" href="http://twitter.com/olegpidsadnyi/"&gt;Oleg&lt;/a&gt; gave a talk about backbone at
&lt;a class="reference external" href="http://paylogic.nl/"&gt;Paylogic&lt;/a&gt;. We were using it for a really fancy
application inside our backoffice, it was quite funny write it and Oleg
decided to share the knowledge.&lt;/p&gt;
&lt;p&gt;I used the techtalk to take some notes and, since this piece of code will
have no sense out of our backoffice, I've written a small example that you can
find as a &lt;a class="reference external" href="https://gist.github.com/3982819"&gt;gist&lt;/a&gt; on my github. I will use it to explain to you some of the
useful things that you can do with backbone and underscore. Feel free to
improve it.&lt;/p&gt;
&lt;p&gt;This is only a introductory post, if you want advance stuff you should go to
the &lt;a class="reference external" href="http://backbonejs.org/"&gt;backbone official documentation&lt;/a&gt; &amp;amp; &lt;a class="reference external" href="http://underscorejs.org/"&gt;underscore
docs&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="why"&gt;
&lt;h2&gt;Why?&lt;/h2&gt;
&lt;p&gt;Backbone is really useful when you make complex GUIs on client side. You can
make your code like in a desktop app using events to handle the actions. It's
not needed to pass around instances of parents views, let's use only the
events for that purpose, and let the child decide.&lt;/p&gt;
&lt;p&gt;You have models too, that you can sync (or not) with the server.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="models"&gt;
&lt;h2&gt;Models&lt;/h2&gt;
&lt;p&gt;In backbone you can have local model and sync them with the server or with
local storage (not explained in this intro). In our example we will:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Create a collection to save our objects (type Item) in.&lt;/li&gt;
&lt;li&gt;Create the model Item.&lt;/li&gt;
&lt;li&gt;Create 2 object type Item inside this collection.&lt;/li&gt;
&lt;li&gt;Render them.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The 3 points can be made only with these lines of code. It's really simple!
(after know how to do it :p):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Model&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;Items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;Collection&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="nx"&gt;model&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;Item&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;

&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;items&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;Items&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;add&lt;/span&gt;&lt;span class="p"&gt;([{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;name&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bar&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}]);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;dl class="docutils"&gt;
&lt;dt&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;Setting values in the objects With .set will trigger the event
change. You can silent it in case that needed, but it's really useful, for
example, to save it.&lt;/dd&gt;
&lt;dt&gt;&lt;strong&gt;Second note&lt;/strong&gt;&lt;/dt&gt;
&lt;dd&gt;backbone is f***ing clever! Imagine, you are changing a name, if the
name has changed on the collection, the event will be raised, if not, it will
not. This means that if you are editing, but finally you change your mind and
you didn't made any change, the event will not be raised.&lt;/dd&gt;
&lt;/dl&gt;
&lt;/div&gt;
&lt;div class="section" id="events"&gt;
&lt;h2&gt;Events&lt;/h2&gt;
&lt;p&gt;They are really useful to remove dependencies between elements. For example,
with jQuery if you change a element from another, the first one needs to know
about the second. With backbone you can catch the event with the child element
and do whatever you want with it.&lt;/p&gt;
&lt;p&gt;On the example of my &lt;a class="reference external" href="https://gist.github.com/3982819"&gt;gist&lt;/a&gt; I show an alert box with the name of the element.
But you could, for example, change it to an editable input.&lt;/p&gt;
&lt;p&gt;This is the code of the example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ItemView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="nx"&gt;events&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;dblclick&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;onDoubleClick&amp;quot;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="nx"&gt;onDoubleClick&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;trim&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;target&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;text&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
    &lt;span class="nx"&gt;alert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hey! Why do you click on &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;text&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;console&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;log&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt; &lt;span class="c1"&gt;//Play with this :)&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We are binding the &lt;tt class="docutils literal"&gt;dblclick&lt;/tt&gt; event to the function &lt;tt class="docutils literal"&gt;onDoubleClick&lt;/tt&gt;. This
function will receive the event, and the event will have the target (in this
case the &lt;tt class="docutils literal"&gt;&amp;lt;li/&amp;gt;&lt;/tt&gt; that we are clicking.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="underscore"&gt;
&lt;h2&gt;Underscore&lt;/h2&gt;
&lt;p&gt;It's really useful to Work with collections. In out example we are using it to
iterate over the items:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;items&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;models&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;itemview&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="nx"&gt;ItemView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;itemview&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you read carefully this piece of code you will realize that we are
instantiating a new ItemView for each particular item, so it has its own
container element created on the fly, re-renderable each time when data is
updated and all events are delegated to this element.&lt;/p&gt;
&lt;p&gt;The amazing thing that you can do with underscore is use templates (yes, like
jinja or django-templates, but in JS)! And we are doing it:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nt"&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nx"&gt;ItemView&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;Backbone&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;View&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;extend&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;#item-template&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;()),&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="nx"&gt;render&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
     &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;el&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;item&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toJSON&lt;/span&gt;&lt;span class="p"&gt;()));&lt;/span&gt;
     &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="p"&gt;...&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;script &lt;/span&gt;&lt;span class="na"&gt;type=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;text/template&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;id=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;item-template&amp;quot;&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
  &lt;span class="o"&gt;&amp;lt;%=&lt;/span&gt; &lt;span class="nx"&gt;name&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="extra-ball"&gt;
&lt;h2&gt;Extra ball&lt;/h2&gt;
&lt;p&gt;Use &lt;tt class="docutils literal"&gt;_.debounce&lt;/tt&gt; to don't call the functions thousands of times, example
drag&amp;amp;dropping an element it will be useful.&lt;/p&gt;
&lt;p&gt;For example in our project we had to sort with drag and drop some elements of a
list, instead send this event in each drag movement, we made it after 200s
being quiet with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nx"&gt;onChange&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;_&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;debounce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;ev&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;pools&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;save&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="mi"&gt;200&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please comment your thoughts about the post. We are all here to learn, and it's
really easy that I made some mistake explaining this. Furhtermore, I know that
my English is not really good, so, I will apreciate constructive comments about
it too :)&lt;/p&gt;
&lt;p&gt;Enjoy it!&lt;/p&gt;
&lt;/div&gt;
</summary><category term="backbone"></category><category term="undercore"></category><category term="javascript"></category><category term="gui"></category></entry><entry><title>Fix low wifi speed on Linux (Ubuntu) with chip Atheros AR9285</title><link href="http://agonzalezro.github.com/fix-low-wifi-speed-on-linux-ubuntu-with-chip-atheros-ar9285.html" rel="alternate"></link><updated>2011-07-03T13:07:00+02:00</updated><author><name>Álex</name></author><id>tag:agonzalezro.github.com,2011-07-03:fix-low-wifi-speed-on-linux-ubuntu-with-chip-atheros-ar9285.html</id><summary type="html">&lt;p&gt;I was very happer after buy my new computer Dell Vostro v130, but after
install Linux on it I've realized that the download speed via WiFi was
very slow! To solve this I found two &amp;quot;solutions&amp;quot;, one of them works, but
the other not (for me).&lt;/p&gt;
&lt;p&gt;The solutions that didn't work is more easy, so I will start with it,
you must install &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;linux-backports-modules-net-natty-generic&lt;/span&gt;&lt;/tt&gt;, you can do
it via synaptic, ubuntu software center, aptitude, apt... I show you a
screenshot doing it with ubuntu software center:&lt;/p&gt;
&lt;a class="reference external image-reference" href="software_center.png"&gt;&lt;img alt="software_center.png" class="align-center" src="software_center.png" style="width: 50%;" /&gt;&lt;/a&gt;
&lt;p&gt;The second &amp;quot;solution&amp;quot; is deactivate the hardware cryptography of the
module, I don't know if this could cause security problems or instead
use hardware it will use software crypt, anyway, it is the best
solutions that I find until the moment.&lt;/p&gt;
&lt;p&gt;To do that, you must create the file &lt;tt class="docutils literal"&gt;/etc/modprobe.d/ath9k.conf&lt;/tt&gt; with
the content: &lt;tt class="docutils literal"&gt;options ath9k nohwcrypt=1&lt;/tt&gt;, you can do it easily with:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
echo &amp;quot;options ath9k nohwcrypt=1&amp;quot; &amp;gt; /etc/modprobe.d/ath9k.conf
&lt;/pre&gt;
&lt;p&gt;If you have any questions, or you find a better solution, please, let me
know.&lt;/p&gt;
</summary><category term="low speed"></category><category term="linux"></category><category term="atheros"></category><category term="wifi"></category><category term="ath9k"></category><category term="ubuntu"></category><category term="ar9285"></category></entry><entry><title>I'm starting to hate GNOME 3</title><link href="http://agonzalezro.github.com/im-starting-to-hate-gnome-3.html" rel="alternate"></link><updated>2011-06-08T19:02:00+02:00</updated><author><name>Álex</name></author><id>tag:agonzalezro.github.com,2011-06-08:im-starting-to-hate-gnome-3.html</id><summary type="html">&lt;p&gt;First of all, I'm GNOME user as main desktop on Linux since the version
1.x (about 10 years ago). I've played with another desktops but GNOME
was always in my heart. But now, with the arrival of GNOME 3 and after
two weeks using it I can say that I'm starting to hate it. In this new
version it has a lot of functions that I don't like and doesn't have a
lot of functions that I like :)&lt;/p&gt;
&lt;p&gt;After see my arguments, perhaps you can help me to change my opinion but
possibily my next post will treat about how erase GNOME 3 and go back to
Unity. Go to see them:&lt;/p&gt;
&lt;a class="reference external image-reference" href="fuuuu.jpg"&gt;&lt;img alt="fuuuu.jpg" class="align-center" src="fuuuu.jpg" style="width: 50%;" /&gt;&lt;/a&gt;
&lt;div class="section" id="dynamic-virtual-desktops"&gt;
&lt;h2&gt;Dynamic virtual desktops&lt;/h2&gt;
&lt;p&gt;I've always used virtual desktops. One for terminals, antoher for
explorers, another for music and a extra one for all other stuff. When I
want to go to my explorer I push Alt+2 and change my virtual desktop to
2. But now, I can't do it, because if I want to open the explorers in
the desktop 2 I must open something in the desktop one, but I don't like
it!&lt;/p&gt;
&lt;p&gt;This is a very big problem for me because I'm not accustomed to use
Alt-Tab to change the windows.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="when-you-close-the-las-window-in-a-desktop"&gt;
&lt;h2&gt;When you close the las window in a desktop...&lt;/h2&gt;
&lt;p&gt;the gnome-shell will be open! I don't like it! Perhpas I've closed this
window to go to my home folder, let me do that!&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="alt-f2-doesn-t-autocomplete"&gt;
&lt;h2&gt;Alt+F2 doesn't autocomplete&lt;/h2&gt;
&lt;p&gt;GNOME always had this option instead KDE that didn't have it, and now,
they erase it? I can't understand why! I know that you can use the Super
key (the fuc***g windows key presented on all keyboards), but use the
gnome-shell to open a program isn't so quickly as open it with alt-f2.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="autologin-on-gdm"&gt;
&lt;h2&gt;Autologin on GDM&lt;/h2&gt;
&lt;p&gt;I like to suppose that this bug is only on my pc, because I've tried to
configure my autologin user and never ever is autologued. Perhaps I
should submit a bug for this case.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="difficulty-to-install-extensions"&gt;
&lt;h2&gt;Difficulty to install extensions&lt;/h2&gt;
&lt;p&gt;I will not say anything more about this.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="no-autohide-bar-and-no-more-bars"&gt;
&lt;h2&gt;No autohide bar, and no more bars?&lt;/h2&gt;
&lt;p&gt;I know that gnome-shell isn't thinked to do that, but perhaps they must
give a chance to do that to the users that like it.&lt;/p&gt;
&lt;p&gt;And finally, one thing that happens with gnome-shell, gnome-do, meego
desktop... Why if you have hide files they appear on recent documents or
in the shell when you start to type? Of course... this hide files isn't
for p0rn, they are my personal documents only.&lt;/p&gt;
&lt;/div&gt;
</summary><category term="unity"></category><category term="gnome3"></category><category term="hate"></category></entry><entry><title>How-to install GNOME 3 instead of Unity on Ubuntu 11.04</title><link href="http://agonzalezro.github.com/how-to-install-gnome-3-instead-of-unity-on-ubuntu-1104.html" rel="alternate"></link><updated>2011-06-08T18:28:00+02:00</updated><author><name>Álex</name></author><id>tag:agonzalezro.github.com,2011-06-08:how-to-install-gnome-3-instead-of-unity-on-ubuntu-1104.html</id><summary type="html">&lt;p&gt;I don't have anything against Unity, but sometimes I want to test, and
this is one of this times.&lt;/p&gt;
&lt;p&gt;I don't know the reason (or perhaps I do), but install GNOME 3 on a
ubuntu system isn't as easy as it must be.&lt;/p&gt;
&lt;p&gt;First of all we need to add the GNOME 3 repos, so, in a console (Alt+F2
and then write gnome-terminal) you must write:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo add-apt-repository ppa:gnome3-team/gnome3
&lt;/pre&gt;
&lt;p&gt;Then, we must update our system and install the gnome shell:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get updatesudo apt-get dist-upgradesudo apt-get install gnome-shell
&lt;/pre&gt;
&lt;p&gt;After that, sometimes we have problems with the themes (you can reboot
to test it, but I recommend you to follow this steps), so, we must
remove the accesibility themes and install the new ones (and another
program that we will need after that):&lt;/p&gt;
&lt;pre class="literal-block"&gt;
sudo apt-get remove gnome-accessibility-themessudo apt-get install gnome-themes-standard gnome-tweak-tool
&lt;/pre&gt;
&lt;p&gt;Well... now, you can reboot your system and login with GNOME selected as
session. You will see your new GNOME 3, but, we must tweak it, for this,
you can push Alt+F2 and write:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
gnome-tweak-tool
&lt;/pre&gt;
&lt;p&gt;I recommend you to have this themes configuration (you can change the
icons if you like) and activate the option on the first tab called &amp;quot;Have
file manager handle the desktop&amp;quot;:&lt;/p&gt;
&lt;a class="reference external image-reference" href="tweak_tool.png"&gt;&lt;img alt="tweak_tool.png" class="align-center" src="tweak_tool.png" style="width: 50%;" /&gt;&lt;/a&gt;
&lt;p&gt;Good luck! And if you have any trouble, please, feel free to ask me in
the comments!&lt;/p&gt;
&lt;p&gt;PS:&amp;nbsp;&lt;a class="reference external" href="http://twitter.com/marioquartz"&gt;&amp;#64;marioquartz&lt;/a&gt;&amp;nbsp;wants to see the result, so here it is (click to
enlarge)!&lt;/p&gt;
&lt;a class="reference external image-reference" href="gnome3_desktop.png"&gt;&lt;img alt="gnome3_desktop.png" class="align-center" src="gnome3_desktop.png" style="width: 50%;" /&gt;&lt;/a&gt;
</summary><category term="unity"></category><category term="gnome3"></category><category term="desktop"></category><category term="ubuntu"></category><category term="gnome"></category></entry></feed>