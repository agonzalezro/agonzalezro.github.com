<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>codereview on // Álex Go{,5z}</title><link>https://agonzalezro.github.io/tags/codereview/</link><description>Recent content in codereview on // Álex Go{,5z}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 29 Jan 2013 00:00:00 +0000</lastBuildDate><atom:link href="https://agonzalezro.github.io/tags/codereview/index.xml" rel="self" type="application/rss+xml"/><item><title>codereview from the POV of a noob</title><link>https://agonzalezro.github.io/posts/codereview/</link><pubDate>Tue, 29 Jan 2013 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/codereview/</guid><description>
&lt;p>Hi g(irl|uy)s! I would like to start with a disclaimer:&lt;/p>
&lt;p>&lt;em>I am not (and I don&amp;rsquo;t pretend to be) a craftmanship trooper (they like
to be called like that isn&amp;rsquo;t?), senior engineer with more years of
experience that the technology has, guru, blablabla&amp;hellip;&lt;/em>&lt;/p>
&lt;p>&lt;em>I just want to show my opinion about this process (which I really
like!). But more important that share my opinion, is to know what is
yours, so, please, comment!&lt;/em>&lt;/p>
&lt;p>Today we had an interesting conversation at work about how we make and
how we should make our codereviews. My point of view is that there are
three different things to check:&lt;/p>
&lt;ol>
&lt;li>&lt;strong>Code syntax.&lt;/strong> It&amp;rsquo;s a part that should be 100% automagically done.
I usually work with python and I let this work to
&lt;a href="http://pypi.python.org/pypi/flake8">Flake8&lt;/a> on vim, but it&amp;rsquo;s always
good to have a git hook.&lt;/li>
&lt;li>&lt;strong>Reusability and maintainability.&lt;/strong> I am afraid that this is the
worst part to check, it&amp;rsquo;s a manual process and it is really
subjective. Some people can think that use itertools with 2 lambda
functions is pretty clear and comprehensible, other people can think
that this code is the result of a dirty mind developer.&lt;/li>
&lt;li>&lt;strong>Functionality.&lt;/strong> Automated test! All the test that you can, and of
course, they worst the time that you will spent developing them.
There are things that can not be easily tested but in that case
let&amp;rsquo;s suppose that you were clever enough to test them manually and
in the case that is possible you can show it to anybody else (this
really helps!).&lt;/li>
&lt;/ol>
&lt;p>As I said the point 1 can be (and should be) automated! It&amp;rsquo;s really easy
to do, the same way that &lt;a href="http://pypi.python.org/pypi/flake8">Flake8&lt;/a>
exists for python, I am pretty sure that you will have one for your
favourite language. It&amp;rsquo;s really painful get back a pull request just for
some spaces that are not in place.&lt;/p>
&lt;p>For the point 3, yep, let me jump the second for now. Unit testing,
integration testing, functional testing&amp;hellip; whatever you want, but try to
automate it. This + a CI server will make your live really &amp;ldquo;easy&amp;rdquo;!&lt;/p>
&lt;p>And finally, about the second point. Each developer have their way to do
the things, but usually there are some points that can be fixed and
sometimes because we don&amp;rsquo;t know, other times just because we are lazy
but we post code like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">f&lt;/span>(a, b, c):
&lt;span style="color:#66d9ef">if&lt;/span> (a &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span> &lt;span style="color:#f92672">and&lt;/span>
request&lt;span style="color:#f92672">.&lt;/span>user &lt;span style="color:#f92672">and&lt;/span>
request&lt;span style="color:#f92672">.&lt;/span>user&lt;span style="color:#f92672">.&lt;/span>is_authenticated() &lt;span style="color:#f92672">and&lt;/span> request&lt;span style="color:#f92672">.&lt;/span>user&lt;span style="color:#f92672">.&lt;/span>has_perm(&lt;span style="color:#e6db74">&amp;#39;write&amp;#39;&lt;/span>)
):
&lt;span style="color:#66d9ef">return&lt;/span> HttpResponse(json&lt;span style="color:#f92672">.&lt;/span>dumps(&lt;span style="color:#e6db74">&amp;#39;{authorized: True, &amp;#39;&lt;/span>a&lt;span style="color:#e6db74">&amp;#39;: a}))&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> a &lt;span style="color:#f92672">&amp;gt;=&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> HttpResponse(json&lt;span style="color:#f92672">.&lt;/span>dumps(&lt;span style="color:#e6db74">&amp;#39;{authorized: True, &amp;#39;&lt;/span>a&lt;span style="color:#e6db74">&amp;#39;: a}))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is just an example, but you should agree with me that it&amp;rsquo;s really
easy to improve. This is what, in my opinion should be more checked in
the reviews.&lt;/p>
&lt;p>This was just an example (please, remember that :D), but could be
improved with something like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">proper_function_name&lt;/span>(proper_variable_name):
&lt;span style="color:#e6db74">&amp;#34;&amp;#34;&amp;#34;This is an amazing function that will do just a thing.
&lt;/span>&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> :param proper_variable_name: what I am?
&lt;/span>&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> :returns: An HttpResponse object with the following JSON content:
&lt;/span>&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> {&amp;#39;authorized&amp;#39;: bool,
&lt;/span>&lt;span style="color:#e6db74"> &amp;#39;proper_variable_name: int}
&lt;/span>&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74"> &amp;#34;&amp;#34;&amp;#34;&lt;/span>
is_authorized &lt;span style="color:#f92672">=&lt;/span> (
request&lt;span style="color:#f92672">.&lt;/span>user &lt;span style="color:#f92672">and&lt;/span>
request&lt;span style="color:#f92672">.&lt;/span>user&lt;span style="color:#f92672">.&lt;/span>is_authenticated() &lt;span style="color:#f92672">and&lt;/span>
request&lt;span style="color:#f92672">.&lt;/span>user&lt;span style="color:#f92672">.&lt;/span>has_perm(&lt;span style="color:#e6db74">&amp;#39;write-resource&amp;#39;&lt;/span>)
)
&lt;span style="color:#66d9ef">return&lt;/span> HttpResponse(
json&lt;span style="color:#f92672">.&lt;/span>dumps({
&lt;span style="color:#e6db74">&amp;#39;authorized&amp;#39;&lt;/span>: is_authorized,
&lt;span style="color:#e6db74">&amp;#39;proper_variable_name&amp;#39;&lt;/span>: proper_variable_name
})
)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Those were the improvements (again, remember that it&amp;rsquo;s just an example):&lt;/p>
&lt;ol>
&lt;li>Give a proper name to the function. Don&amp;rsquo;t be afraid, everybody has
autocompletion! :D&lt;/li>
&lt;li>Give a proper name to the vars.&lt;/li>
&lt;li>DOCUMENT! In this example, ready for Sphinx.&lt;/li>
&lt;li>Simplify the if statements, actually, after take a look you made it
dissapear.&lt;/li>
&lt;li>One return.&lt;/li>
&lt;/ol>
&lt;p>So, what&amp;rsquo;s your opinion? What do you think that is more important in a
codereview.&lt;/p></description></item></channel></rss>