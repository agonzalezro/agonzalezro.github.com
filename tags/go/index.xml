<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>go on // √Ålex Go{,5z}</title><link>https://agonzalezro.github.io/tags/go/</link><description>Recent content in go on // √Ålex Go{,5z}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 13 Jan 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://agonzalezro.github.io/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>How to read a Reader twice</title><link>https://agonzalezro.github.io/posts/tee_reader/</link><pubDate>Sat, 13 Jan 2018 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/tee_reader/</guid><description>
&lt;p>Some time ago I read about &lt;a href="https://golang.org/pkg/io/#TeeReader">&lt;code>TeeReader&lt;/code>&lt;/a> but to be fair, I didn&amp;rsquo;t give it that much thought. However, few month back I saw &lt;a href="https://www.youtube.com/watch?v=c5ufcpTGIJM&amp;amp;list=PL64wiCrrxh4Jisi7OcCJIUpguV_f5jGnZ">a video&lt;/a> by &lt;a href="https://twitter.com/francesc">@francesc&lt;/a> and his nice use case and I wrote down a new item in my mental TODO list about things I wanted to use.&lt;/p>
&lt;p>Last week I had the chance to do it; we have a service that requires reading a request body to check for a &lt;code>Status&lt;/code> field and also it requires to store the raw request.&lt;/p>
&lt;p>What we were doing in the first iteration was unmarshalling the full payload into a struct and marshal the struct as the raw data. This process wasn&amp;rsquo;t very reliable because it&amp;rsquo;s pretty easy to lose information in during the un/marshalling.&lt;/p>
&lt;p>To solve it we had two options:&lt;/p>
&lt;ol>
&lt;li>Read all the body, store it in a variable and use that var as raw data and as an input to the &lt;code>Unmarshal&lt;/code> call. Not very neat as you are not taking advantages of the &lt;a href="https://blog.golang.org/json-and-go#TOC_7.">decoding streams&lt;/a>.&lt;/li>
&lt;li>Use the &lt;code>TeeReader&lt;/code>.&lt;/li>
&lt;/ol>
&lt;p>Here is an example (not with real names tho.) of what we end up doing:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-go" data-lang="go">&lt;span style="color:#66d9ef">type&lt;/span> &lt;span style="color:#a6e22e">Payload&lt;/span> &lt;span style="color:#66d9ef">struct&lt;/span> {
&lt;span style="color:#a6e22e">Status&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span>
}
&lt;span style="color:#66d9ef">func&lt;/span> &lt;span style="color:#a6e22e">getStatusAndReason&lt;/span>(&lt;span style="color:#a6e22e">r&lt;/span> &lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">Reader&lt;/span>) (&lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#66d9ef">string&lt;/span>, &lt;span style="color:#66d9ef">error&lt;/span>) {
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">buf&lt;/span> &lt;span style="color:#a6e22e">bytes&lt;/span>.&lt;span style="color:#a6e22e">Buffer&lt;/span>
&lt;span style="color:#a6e22e">tee&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">io&lt;/span>.&lt;span style="color:#a6e22e">TeeReader&lt;/span>(&lt;span style="color:#a6e22e">r&lt;/span>, &lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">buf&lt;/span>)
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">payload&lt;/span> &lt;span style="color:#a6e22e">Payload&lt;/span>
&lt;span style="color:#a6e22e">err&lt;/span> &lt;span style="color:#f92672">:=&lt;/span> &lt;span style="color:#a6e22e">json&lt;/span>.&lt;span style="color:#a6e22e">NewDecoder&lt;/span>(&lt;span style="color:#a6e22e">tee&lt;/span>).&lt;span style="color:#a6e22e">Decode&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>&lt;span style="color:#a6e22e">payload&lt;/span>)
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">payload&lt;/span>.&lt;span style="color:#a6e22e">Status&lt;/span>, &lt;span style="color:#a6e22e">buf&lt;/span>.&lt;span style="color:#a6e22e">String&lt;/span>(), &lt;span style="color:#a6e22e">err&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I hope you liked our use case, and in case you would do in any other way, please, &lt;a href="https://twitter.com/agonzalezro">do let me know&lt;/a>! It&amp;rsquo;s always nice learning from your experiences üòÄ&lt;/p></description></item><item><title>Closing 2016, a list of talks I gave</title><link>https://agonzalezro.github.io/posts/2016/</link><pubDate>Sun, 29 Jan 2017 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/2016/</guid><description>
&lt;figure class="left" >
&lt;img src="https://agonzalezro.github.io/rafa.jpg" alt="A cow" />
&lt;figcaption class="center" >Thanks @rais38 for the photo!&lt;/figcaption>
&lt;/figure>
&lt;p>We are almost at the end of January but I didn&amp;rsquo;t want to end the first month of the year without doing a small recap of the talks I gave last year.&lt;/p>
&lt;p>When I moved to Spain at the end of 2015 I said to myself that I didn&amp;rsquo;t want to forget the little English I knew so I needed to force myself to keep traveling outside of Spain and to do some public speaking. The public speaking bit is for two reason: keep forcing myself to speak English and&amp;hellip; to lose my fear about talking English in front of a bunch of people you don&amp;rsquo;t know about a tech that they probably know better than you.&lt;/p>
&lt;p>I could do it much better than I did, but I am happy with the results.&lt;/p>
&lt;h2 id="my-english-talks">My English talks&lt;/h2>
&lt;h3 id="custom-volume-plugins--kubeconhttpskubeconio">Custom Volume Plugins @ &lt;a href="https://kubecon.io">Kubecon&lt;/a>&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://www.youtube.com/watch?v=33VzHXuuRs4">Video&lt;/a> &amp;amp; &lt;a href="https://speakerdeck.com/agonzalezro/custom-volume-plugins">slides&lt;/a>&lt;/em>&lt;/p>
&lt;p>I prepared this talk a lot, but I was pretty nervous on stage I did a terrible job. Some people said that they learn a lot of new concepts, but they were just trying to be friendly :) Probably I underestimated the pressure behind a Kubecon talk and I will fix this in the future.&lt;/p>
&lt;h3 id="python-kubernetes-and-friends--pygrunnhttpwwwpygrunnorg">Python, Kubernetes and friends @ &lt;a href="http://www.pygrunn.org/">PyGrunn&lt;/a>&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://www.youtube.com/watch?v=0tsaMVoydDg">Video&lt;/a> &amp;amp; &lt;a href="https://speakerdeck.com/agonzalezro/python-kubernetes-and-friends">Slides&lt;/a>&lt;/em>&lt;/p>
&lt;p>I gave this in the best (IMHO, but I could be biased) Python conference in the Netherlands, it went pretty well, I knew the things I did pretty badly in my previous talk at Kubeconf and I tried to fix the problems. However, if you check the video and you can give me some advice, feel free.&lt;/p>
&lt;h3 id="from-pets-to-cattle-the-way-of-kubernetes">From pets to cattle, the way of Kubernetes&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://www.youtube.com/watch?v=K_Kh4LMiiqQ">Video&lt;/a> &amp;amp; &lt;a href="https://speakerdeck.com/agonzalezro/from-pets-to-cattle-the-way-of-kubernetes">Slides&lt;/a>&lt;/em>&lt;/p>
&lt;p>This talk was in Spain, but since it was a big conference I gave it in English for non-Spanish speakers. I think the talk was ok, I got a 4 out 5 in their feedback tool, but it seems I didn&amp;rsquo;t attach the people because nobody asking anything at the end. Out of camera I got several questions tho.&lt;/p>
&lt;h2 id="and-the-spanish-ones">And the Spanish ones&lt;/h2>
&lt;p>All these talks were internal Jobandtalent talks for my ex-colleagues, I hope it helped them, they definitely helped me, it was a trusty environment and the questions were really interesting. You probably wouldn&amp;rsquo;t ask that much in a conference but it helps the speaker (in this case me) to improve.&lt;/p>
&lt;h3 id="go-101--jobandtalenthttpwwwjobandtalentcom">Go 101 @ &lt;a href="http://www.jobandtalent.com/">Jobandtalent&lt;/a>&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://www.youtube.com/watch?v=zaywpuLV4BY">Video&lt;/a> &amp;amp; &lt;a href="https://speakerdeck.com/agonzalezro/go-101-updated">Slides&lt;/a>&lt;/em>&lt;/p>
&lt;h3 id="kubernetes-101--jobandtalenthttpwwwjobandtalentcom">Kubernetes 101 @ &lt;a href="http://www.jobandtalent.com/">Jobandtalent&lt;/a>&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://www.youtube.com/watch?v=5YmhMM_q4uI">Video&lt;/a> &amp;amp; &lt;a href="https://speakerdeck.com/agonzalezro/kubernetes-101">Slides&lt;/a>&lt;/em>&lt;/p>
&lt;h3 id="docker-101--jobandtalenthttpwwwjobandtalentcom">Docker 101 @ &lt;a href="http://www.jobandtalent.com/">Jobandtalent&lt;/a>&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://speakerdeck.com/agonzalezro/docker-101">Slides&lt;/a>&lt;/em>&lt;/p>
&lt;p>Out of that list I gave some other, for example, about &lt;a href="https://github.com/agonzalezro/goqui/blob/master/examples/neo4j_intro_slides.neo4j">Neo4J&lt;/a> and a workshop with my friend &lt;a href="https://twitter.com/ipedrazas">@ipedrazas&lt;/a> about Kubernetes &amp;amp; Docker, here, in Spain. Also, I started &lt;a href="https://meetup.com/mad-scalability">mad Scalability&lt;/a> and I am quite happy with about it!&lt;/p>
&lt;p>I will try to prepare some CFP in 2017, but as today I see it pretty difficult because of reasons :)&lt;/p>
&lt;p>As I said at the beginning of the post, one of the reasons why I tried to do public speaking is to improve at it, you if you have any advice &lt;a href="https://twitter.com/agonzalezro">share it with me&lt;/a> please!&lt;/p></description></item><item><title>Go introduction at Shopa</title><link>https://agonzalezro.github.io/posts/go101/</link><pubDate>Wed, 05 Aug 2015 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/go101/</guid><description>
&lt;p>Here at &lt;a href="http://shopa.com">Shopa&lt;/a> we use Go for some services but we use a lot
of Rails as well so not everybody needs to know Go. This is why I&amp;rsquo;ve decided to
do a small introduction to it in one of our workshops.&lt;/p>
&lt;p>The slides are mainly examples with a little bit of history around the Go
world. If you find them useful, feel free to grab them here:
&lt;a href="https://github.com/agonzalezro/slides/tree/master/go">https://github.com/agonzalezro/slides/tree/master/go&lt;/a>&lt;/p>
&lt;p>Probably I&amp;rsquo;ve forgotten about something but it was just a 1 hour and a half presentation.&lt;/p>
&lt;p>&lt;a href="http://go-talks.appspot.com/github.com/agonzalezro/slides/go/101.slide">Here you can see them in
action&lt;/a>.
I didn&amp;rsquo;t iframed them here because the layout was ugly and the sliding between
slides kinda poor.&lt;/p>
&lt;p>&lt;a href="http://twitter.com/agonzalezro">Tweet me&lt;/a> if you have more comments!&lt;/p></description></item><item><title>IoT hackathon with Intel Edison and Go</title><link>https://agonzalezro.github.io/posts/edison_hackathon/</link><pubDate>Thu, 18 Jun 2015 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/edison_hackathon/</guid><description>
&lt;p>I spent last weekend in a hackathon organised by Intel to show their Intel
Edison platform. I can just say that it was awesome, the quality of the
projects, the prizes, the food, the freebies (yes, they gave us an Intel
Edison)&amp;hellip;&lt;/p>
&lt;p>But this post is not about that, I want to explain my project and how I made
Golang work in an Intel Edison thanks to &lt;a href="http://gobot.io/">gobot&lt;/a>.&lt;/p>
&lt;p>As you are already aware, Go easily supports cross compiling creating a binary
that you can use in your other devices. In this case, the Intel Edison is (by
default) a Linux distribution with i386 architecture.&lt;/p>
&lt;h2 id="what-did-i-do">What did I do?&lt;/h2>
&lt;p>I did a simple project to track the happiness of the assistant to a conference:
they can vote if it was a good one ro not &amp;amp; the Edison is also tracking the
clapping. All this information is stored into a
&lt;a href="https://influxdb.com/">InfluxDB&lt;/a> and I was using
&lt;a href="http://grafana.org/">Grafana&lt;/a> to demo it:&lt;/p>
&lt;p>&lt;img src="https://agonzalezro.github.io/iot_grafana.png" alt="image">&lt;/p>
&lt;p>Ok, let&amp;rsquo;s start!&lt;/p>
&lt;h2 id="first-step-setup-the-wifi">First step: setup the wifi&lt;/h2>
&lt;p>After you connect the Edison you will have a new decive in &lt;code>/dev/&lt;/code> with the
form: &lt;code>/dev/tty.usbserial-...&lt;/code>. You can just use screen to connect to it, in my
case:&lt;/p>
&lt;pre>&lt;code>screen /dev/tty.usbserial-A903BU3J 115200 -L
&lt;/code>&lt;/pre>
&lt;p>Inside the machine:&lt;/p>
&lt;pre>&lt;code>configure_edison --wifi
&lt;/code>&lt;/pre>
&lt;p>You could as well use &lt;code>--setup&lt;/code> if you want to change the name, password, etc&amp;hellip;&lt;/p>
&lt;p>Cool! Now we have the device in out network, let&amp;rsquo;s see the IP with &lt;code>ifconfig&lt;/code>
and copy/paste it somewhere.&lt;/p>
&lt;h2 id="second-step-code">Second step: Code!&lt;/h2>
&lt;p>As I said before I was using the gobot framework. This framework easily allows
you to access to the GPIO that I&amp;rsquo;ve been using in the Edison (buttons, lights &amp;amp;
sound sensor).&lt;/p>
&lt;p>Here is a snippet:&lt;/p>
&lt;pre>&lt;code>gbot := gobot.NewGobot()
edisonAdaptor := edison.NewEdisonAdaptor(&amp;quot;edison&amp;quot;)
buttonPositive := gpio.NewButtonDriver(edisonAdaptor, &amp;quot;button_positive&amp;quot;, &amp;quot;4&amp;quot;)
...
robot := gobot.NewRobot(
&amp;quot;buttonBot&amp;quot;,
[]gobot.Connection{edisonAdaptor},
[]gobot.Device{buttonPositive, buttonNegative, redLed, greenLed, blueLed, soundSensor},
work,
)
&lt;/code>&lt;/pre>
&lt;p>&lt;code>work&lt;/code> is a loop where you can heard for the events created by the devices.&lt;/p>
&lt;p>If you want to see the full code: &lt;a href="https://github.com/agonzalezro/iotroadshow_june_2015/blob/master/main.go">https://github.com/agonzalezro/iotroadshow_june_2015/blob/master/main.go&lt;/a>&lt;/p>
&lt;h2 id="third-step-compile-deploy--run">Third step: compile, deploy &amp;amp; run&lt;/h2>
&lt;p>Crosscompile it. I was using &lt;a href="https://github.com/mitchellh/gox">gox&lt;/a> but you
can use the default tools for that as well. In my case:&lt;/p>
&lt;pre>&lt;code>gox -arch=&amp;quot;386&amp;quot; -os=&amp;quot;linux&amp;quot;
&lt;/code>&lt;/pre>
&lt;p>This will generate a file called &lt;code>project_linux_386&lt;/code> that is what you will need
to copy to the Edison.&lt;/p>
&lt;p>To copy it you just need a simple scp:&lt;/p>
&lt;pre>&lt;code>scp project_linux_i386 root@[the_edison_ip]:/home/root/my_program
&lt;/code>&lt;/pre>
&lt;p>And to run it you can ssh and manually run it or as I was doing:&lt;/p>
&lt;pre>&lt;code>ssh root@[the_edison_ip] /home/root/my_program
&lt;/code>&lt;/pre>
&lt;p>I&amp;rsquo;ve automated this process in a
&lt;a href="https://github.com/agonzalezro/iotroadshow_june_2015/blob/master/Makefile">Makefile&lt;/a>.&lt;/p>
&lt;p>Also, feel free to check the
&lt;a href="https://github.com/agonzalezro/iotroadshow_june_2015/blob/master/README.md">README.md&lt;/a>
with a better explanation about what my project was.&lt;/p>
&lt;p>Any question? Reach me on twitter as
&lt;a href="http://twitter.com/agonzalezro">@agonzalezro&lt;/a> or just post a comment here.&lt;/p></description></item><item><title>The well deserved Golang UK conference is here</title><link>https://agonzalezro.github.io/posts/golanguk2015/</link><pubDate>Sun, 29 Mar 2015 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/golanguk2015/</guid><description>
&lt;p>Hi mum &amp;amp; dad (my 2 followers on the blog?) some friends,
(&lt;a href="https://twitter.com/johannacherry">Johanna&lt;/a>,
&lt;a href="https://twitter.com/_samdb">Sam&lt;/a> &amp;amp; &lt;a href="https://twitter.com/_samdb">David&lt;/a>) and
myself have decided to organize a Go conference in the UK the next August 21.&lt;/p>
&lt;p>He had opened the blind bird at the beginning of the week and we are already
close to finish those cheap tickets, so hurry up and &lt;a href="http://www.eventbrite.co.uk/e/golang-uk-conference-2015-tickets-16233380478">buy a
ticket&lt;/a>.
We can see for the call for papers already received that the quality of the
talks is going to be awesome, but don&amp;rsquo;t miss your opportunity as &lt;a href="http://www.golanguk.com/speakers/">send us a
paper&lt;/a> before May 31st.&lt;/p>
&lt;p>As a final note I want to and that if you want to sponsor the event or you have
any further question, feel free to presonally &lt;a href="https://twitter.com/agonzalezro">contact
me&lt;/a> or do it through the conference email:
&lt;a href="http://info@golanguk.com">info@golanguk.com&lt;/a>.&lt;/p>
&lt;p>I know that a bunch of assiduous people to the meetups is going already, so
hope to see you there as well!&lt;/p></description></item><item><title>Graph your meetup.com group with Neo4J and some Go</title><link>https://agonzalezro.github.io/posts/gotagmee/</link><pubDate>Wed, 25 Feb 2015 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/gotagmee/</guid><description>
&lt;p>Last days I&amp;rsquo;ve been spending sometime in a small project for fun. Sadly I
couldn&amp;rsquo;t do &lt;a href="https://twitter.com/agonzalezro/status/567823851791589376">anything for
production&lt;/a> so I
hacked &lt;a href="https://github.com/agonzalezro/gotagmee">gotagmee&lt;/a> which is a tiny
thingy that will created some goroutines to get all the members in a
&lt;a href="http://meetup.com">meetup.com&lt;/a> group with their interests and store them in a
Neo4J DB as &lt;code>Member&lt;/code> or &lt;code>Topic&lt;/code> entities with their respective relations.&lt;/p>
&lt;p>I wrote this because I wanted to get the data, but then I realised that this
piece of code is pretty neat (check the github repo for the original):&lt;/p>
&lt;pre>&lt;code>membersChan := make(chan db.Member, 1)
go api.Members(membersChan)
db, _ := db.NewDB(*neo4jDB)
for m := range membersChan {
db.Store(m)
}
&lt;/code>&lt;/pre>&lt;p>Basically I am creating a channel that is going to be used to receive the
members (1 by 1) whenever one of the subroutines scraping the API have one
ready. Perhaps there are better ways to do it, but I really like it :)&lt;/p>
&lt;p>Let&amp;rsquo;s go to the important part: &lt;strong>the data&lt;/strong>. I&amp;rsquo;ve used the code to extract
the data of the meetup that I co-organize here at London, the &lt;a href="http://www.meetup.com/Go-London-User-Group">Go London User
Group&lt;/a> if you are interested, I
could share with you a dump. For this example I was just interested in the
users and topics, but if you want, change it to get more data:
&lt;a href="http://www.meetup.com/meetup_api/docs/2/members/">http://www.meetup.com/meetup_api/docs/2/members/&lt;/a>&lt;/p>
&lt;p>We knew this already, but how many users do we have, easy peasy:&lt;/p>
&lt;pre>&lt;code>neo4j-sh (?)$ match (n:Member) return count(n);
+----------+
| count(n) |
+----------+
| 671 |
+----------+
1 row
27 ms
&lt;/code>&lt;/pre>&lt;p>But perhaps the number of topic that our users follow is not (was not) as easy
to know:&lt;/p>
&lt;pre>&lt;code>neo4j-sh (?)$ match (n:Topic) return count(n);
+----------+
| count(n) |
+----------+
| 1204 |
+----------+
1 row
30 ms
&lt;/code>&lt;/pre>&lt;p>I know that I am part of that meeting, what do I &amp;ldquo;like&amp;rdquo;:&lt;/p>
&lt;pre>&lt;code>neo4j-sh (?)$ match (n)-[]-(t) where n.name =~ &amp;quot;Alexandre.*&amp;quot; return count(t);
+----------+
| count(t) |
+----------+
| 17 |
+----------+
1 row
255 ms
&lt;/code>&lt;/pre>&lt;p>I think that I didn&amp;rsquo;t impress anybody until here, but one of the ideas behind
graph DBs is easily find connections between entities, for example what do I
have in common with my friend &lt;a href="http://twitter.com/ipedrazas">@ipedrazas&lt;/a>? I
know that he likes beers as me, but I am talking about meetup.com relations,
let&amp;rsquo;s see!&lt;/p>
&lt;pre>&lt;code>neo4j-sh (?)$ match (n)-[]-(t:Topic)-[]-(m) where n.name =~ &amp;quot;Alexandre.*&amp;quot; and m.name =~ &amp;quot;Ivan Pedrazas&amp;quot; return t.name;
+----------------------+
| t.name |
+----------------------+
| &amp;quot;Open Source&amp;quot; |
| &amp;quot;Programming&amp;quot; |
| &amp;quot;Mobile Development&amp;quot; |
| &amp;quot;golang&amp;quot; |
+----------------------+
4 rows
91 ms
&lt;/code>&lt;/pre>&lt;p>Nice! But if you want to do it beautiful for your boss, you could as well use Cypher:&lt;/p>
&lt;p>&lt;img src="https://agonzalezro.github.io/dev/meetup_neo4j_example.png" alt="meetup_neo4j_example">&lt;/p>
&lt;p>Now imagine that I want to target the interest of my group by the things that
they like more, which ones are those?&lt;/p>
&lt;pre>&lt;code>neo4j-sh (?)$ match ()-[r]-&amp;gt;(t:Topic) with t, count(r) as rel return t.name order by rel desc limit 10;
+------------------------+
| t.name |
+------------------------+
| &amp;quot;Programming&amp;quot; |
| &amp;quot;Software Development&amp;quot; |
| &amp;quot;Open Source&amp;quot; |
| &amp;quot;New Technology&amp;quot; |
| &amp;quot;Technology&amp;quot; |
| &amp;quot;Web Development&amp;quot; |
| &amp;quot;Startup Businesses&amp;quot; |
| &amp;quot;Big Data&amp;quot; |
| &amp;quot;Cloud Computing&amp;quot; |
| &amp;quot;Internet Startups&amp;quot; |
+------------------------+
10 rows
99 ms
&lt;/code>&lt;/pre>&lt;p>They were kinda clear for this kind of geeky meetup :)&lt;/p>
&lt;p>Hope that you enjoyed, and if you have any more question or queries for the data,
ping me here or at &lt;a href="http://twitter.com/agonzalezro">@agonzalezro&lt;/a>.&lt;/p></description></item><item><title>How to manage multiple errors in Go</title><link>https://agonzalezro.github.io/posts/errors/</link><pubDate>Fri, 17 Oct 2014 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/errors/</guid><description>
&lt;p>Let me start with a disclaimer, I don&amp;rsquo;t really know if this is a pattern that
must be followed or it&amp;rsquo;s just a weird idea coming out of my head.&lt;/p>
&lt;p>The second disclaimer is that I am pretty sure that I am not the only mind that
thought about this, but I didn&amp;rsquo;t see it in use in any place. Why?&lt;/p>
&lt;p>Error handling in Go has his advantages and disadvantages, for me, the most
important disadvantage is the &amp;ldquo;weird&amp;rdquo; way of checking the error just after the
line that can raise it.&lt;/p>
&lt;p>I&amp;rsquo;ve experimenting a little bit with it and I found this solution:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Basically, with the default approach you would need 2 new lines as follows:&lt;/p>
&lt;pre>&lt;code>if err != nil {
...
}
&lt;/code>&lt;/pre>&lt;p>I find this pattern pretty useful for things like http handlers or so.&lt;/p>
&lt;p>Also, you are able to add a &lt;code>switch&lt;/code> at the end to check the kind of error and
keep your code more &amp;ldquo;organized&amp;rdquo;.&lt;/p>
&lt;p>What do you think? Should I use it in every place I can? Do you do it in a
better way?&lt;/p></description></item><item><title>12 Go Best Practices</title><link>https://agonzalezro.github.io/posts/go_meetup_mar_2014/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/go_meetup_mar_2014/</guid><description>
&lt;p>Last Monday I had the chance to see &lt;a href="https://twitter.com/francesc">@francesc&lt;/a>
talking on the &lt;a href="http://www.meetup.com/Go-London-User-Group">Go London User
Group&lt;/a>. His talk was about best
practices (and advices) when you are programming in Go.&lt;/p>
&lt;p>Summarising it a little bit, I would say that some of the cases explained there
are things that you are going to finish doing even without knowing that you are
doing &amp;ldquo;best practices&amp;rdquo;, but they are other examples that are incredible useful
and clever &amp;amp; I would love to assist to this conference few months ago.&lt;/p>
&lt;p>At the beginning of the slides you are going to see an step-by-step refactoring
which could (and should) be applied to any other language out there. You will
realise of the major improvement on the readability of that piece of code.
Francesc said that the refactored version could possibly be a little bit
slower, but you will have in your power a piece of maintainable code.&lt;/p>
&lt;p>If I need to choose one of the tricks showed, I would definitely go for the
type switch on the (&lt;a href="http://talks.golang.org/2013/bestpractices.slide#8">slide
#8&lt;/a>). Basically, you can
receive an interface as parameter and do a quick casting to whatever kind of
type that you want:&lt;/p>
&lt;pre>&lt;code>....
switch x := v.(type) { // where v is an interface{}
case string:
w.Write(int32(len(x)))
w.Write([]byte(x))
...
&lt;/code>&lt;/pre>
&lt;p>I would say too that coming from a language like Python, it&amp;rsquo;s really easy to be
temped to overuse that functionality :) What do you think?&lt;/p>
&lt;p>Finally, &lt;a href="http://talks.golang.org/2013/bestpractices.slide#1">here you have the
slides&lt;/a> enjoy them as I
did!&lt;/p></description></item></channel></rss>