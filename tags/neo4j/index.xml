<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>neo4j on // Álex Go{,5z}</title><link>https://agonzalezro.github.io/tags/neo4j/</link><description>Recent content in neo4j on // Álex Go{,5z}</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 29 Jan 2017 00:00:00 +0000</lastBuildDate><atom:link href="https://agonzalezro.github.io/tags/neo4j/index.xml" rel="self" type="application/rss+xml"/><item><title>Closing 2016, a list of talks I gave</title><link>https://agonzalezro.github.io/posts/2016/</link><pubDate>Sun, 29 Jan 2017 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/2016/</guid><description>
&lt;figure class="left" >
&lt;img src="https://agonzalezro.github.io/rafa.jpg" alt="A cow" />
&lt;figcaption class="center" >Thanks @rais38 for the photo!&lt;/figcaption>
&lt;/figure>
&lt;p>We are almost at the end of January but I didn&amp;rsquo;t want to end the first month of the year without doing a small recap of the talks I gave last year.&lt;/p>
&lt;p>When I moved to Spain at the end of 2015 I said to myself that I didn&amp;rsquo;t want to forget the little English I knew so I needed to force myself to keep traveling outside of Spain and to do some public speaking. The public speaking bit is for two reason: keep forcing myself to speak English and&amp;hellip; to lose my fear about talking English in front of a bunch of people you don&amp;rsquo;t know about a tech that they probably know better than you.&lt;/p>
&lt;p>I could do it much better than I did, but I am happy with the results.&lt;/p>
&lt;h2 id="my-english-talks">My English talks&lt;/h2>
&lt;h3 id="custom-volume-plugins--kubeconhttpskubeconio">Custom Volume Plugins @ &lt;a href="https://kubecon.io">Kubecon&lt;/a>&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://www.youtube.com/watch?v=33VzHXuuRs4">Video&lt;/a> &amp;amp; &lt;a href="https://speakerdeck.com/agonzalezro/custom-volume-plugins">slides&lt;/a>&lt;/em>&lt;/p>
&lt;p>I prepared this talk a lot, but I was pretty nervous on stage I did a terrible job. Some people said that they learn a lot of new concepts, but they were just trying to be friendly :) Probably I underestimated the pressure behind a Kubecon talk and I will fix this in the future.&lt;/p>
&lt;h3 id="python-kubernetes-and-friends--pygrunnhttpwwwpygrunnorg">Python, Kubernetes and friends @ &lt;a href="http://www.pygrunn.org/">PyGrunn&lt;/a>&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://www.youtube.com/watch?v=0tsaMVoydDg">Video&lt;/a> &amp;amp; &lt;a href="https://speakerdeck.com/agonzalezro/python-kubernetes-and-friends">Slides&lt;/a>&lt;/em>&lt;/p>
&lt;p>I gave this in the best (IMHO, but I could be biased) Python conference in the Netherlands, it went pretty well, I knew the things I did pretty badly in my previous talk at Kubeconf and I tried to fix the problems. However, if you check the video and you can give me some advice, feel free.&lt;/p>
&lt;h3 id="from-pets-to-cattle-the-way-of-kubernetes">From pets to cattle, the way of Kubernetes&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://www.youtube.com/watch?v=K_Kh4LMiiqQ">Video&lt;/a> &amp;amp; &lt;a href="https://speakerdeck.com/agonzalezro/from-pets-to-cattle-the-way-of-kubernetes">Slides&lt;/a>&lt;/em>&lt;/p>
&lt;p>This talk was in Spain, but since it was a big conference I gave it in English for non-Spanish speakers. I think the talk was ok, I got a 4 out 5 in their feedback tool, but it seems I didn&amp;rsquo;t attach the people because nobody asking anything at the end. Out of camera I got several questions tho.&lt;/p>
&lt;h2 id="and-the-spanish-ones">And the Spanish ones&lt;/h2>
&lt;p>All these talks were internal Jobandtalent talks for my ex-colleagues, I hope it helped them, they definitely helped me, it was a trusty environment and the questions were really interesting. You probably wouldn&amp;rsquo;t ask that much in a conference but it helps the speaker (in this case me) to improve.&lt;/p>
&lt;h3 id="go-101--jobandtalenthttpwwwjobandtalentcom">Go 101 @ &lt;a href="http://www.jobandtalent.com/">Jobandtalent&lt;/a>&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://www.youtube.com/watch?v=zaywpuLV4BY">Video&lt;/a> &amp;amp; &lt;a href="https://speakerdeck.com/agonzalezro/go-101-updated">Slides&lt;/a>&lt;/em>&lt;/p>
&lt;h3 id="kubernetes-101--jobandtalenthttpwwwjobandtalentcom">Kubernetes 101 @ &lt;a href="http://www.jobandtalent.com/">Jobandtalent&lt;/a>&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://www.youtube.com/watch?v=5YmhMM_q4uI">Video&lt;/a> &amp;amp; &lt;a href="https://speakerdeck.com/agonzalezro/kubernetes-101">Slides&lt;/a>&lt;/em>&lt;/p>
&lt;h3 id="docker-101--jobandtalenthttpwwwjobandtalentcom">Docker 101 @ &lt;a href="http://www.jobandtalent.com/">Jobandtalent&lt;/a>&lt;/h3>
&lt;p>&lt;em>&lt;a href="https://speakerdeck.com/agonzalezro/docker-101">Slides&lt;/a>&lt;/em>&lt;/p>
&lt;p>Out of that list I gave some other, for example, about &lt;a href="https://github.com/agonzalezro/goqui/blob/master/examples/neo4j_intro_slides.neo4j">Neo4J&lt;/a> and a workshop with my friend &lt;a href="https://twitter.com/ipedrazas">@ipedrazas&lt;/a> about Kubernetes &amp;amp; Docker, here, in Spain. Also, I started &lt;a href="https://meetup.com/mad-scalability">mad Scalability&lt;/a> and I am quite happy with about it!&lt;/p>
&lt;p>I will try to prepare some CFP in 2017, but as today I see it pretty difficult because of reasons :)&lt;/p>
&lt;p>As I said at the beginning of the post, one of the reasons why I tried to do public speaking is to improve at it, you if you have any advice &lt;a href="https://twitter.com/agonzalezro">share it with me&lt;/a> please!&lt;/p></description></item><item><title>Graph your meetup.com group with Neo4J and some Go</title><link>https://agonzalezro.github.io/posts/gotagmee/</link><pubDate>Wed, 25 Feb 2015 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/gotagmee/</guid><description>
&lt;p>Last days I&amp;rsquo;ve been spending sometime in a small project for fun. Sadly I
couldn&amp;rsquo;t do &lt;a href="https://twitter.com/agonzalezro/status/567823851791589376">anything for
production&lt;/a> so I
hacked &lt;a href="https://github.com/agonzalezro/gotagmee">gotagmee&lt;/a> which is a tiny
thingy that will created some goroutines to get all the members in a
&lt;a href="http://meetup.com">meetup.com&lt;/a> group with their interests and store them in a
Neo4J DB as &lt;code>Member&lt;/code> or &lt;code>Topic&lt;/code> entities with their respective relations.&lt;/p>
&lt;p>I wrote this because I wanted to get the data, but then I realised that this
piece of code is pretty neat (check the github repo for the original):&lt;/p>
&lt;pre>&lt;code>membersChan := make(chan db.Member, 1)
go api.Members(membersChan)
db, _ := db.NewDB(*neo4jDB)
for m := range membersChan {
db.Store(m)
}
&lt;/code>&lt;/pre>&lt;p>Basically I am creating a channel that is going to be used to receive the
members (1 by 1) whenever one of the subroutines scraping the API have one
ready. Perhaps there are better ways to do it, but I really like it :)&lt;/p>
&lt;p>Let&amp;rsquo;s go to the important part: &lt;strong>the data&lt;/strong>. I&amp;rsquo;ve used the code to extract
the data of the meetup that I co-organize here at London, the &lt;a href="http://www.meetup.com/Go-London-User-Group">Go London User
Group&lt;/a> if you are interested, I
could share with you a dump. For this example I was just interested in the
users and topics, but if you want, change it to get more data:
&lt;a href="http://www.meetup.com/meetup_api/docs/2/members/">http://www.meetup.com/meetup_api/docs/2/members/&lt;/a>&lt;/p>
&lt;p>We knew this already, but how many users do we have, easy peasy:&lt;/p>
&lt;pre>&lt;code>neo4j-sh (?)$ match (n:Member) return count(n);
+----------+
| count(n) |
+----------+
| 671 |
+----------+
1 row
27 ms
&lt;/code>&lt;/pre>&lt;p>But perhaps the number of topic that our users follow is not (was not) as easy
to know:&lt;/p>
&lt;pre>&lt;code>neo4j-sh (?)$ match (n:Topic) return count(n);
+----------+
| count(n) |
+----------+
| 1204 |
+----------+
1 row
30 ms
&lt;/code>&lt;/pre>&lt;p>I know that I am part of that meeting, what do I &amp;ldquo;like&amp;rdquo;:&lt;/p>
&lt;pre>&lt;code>neo4j-sh (?)$ match (n)-[]-(t) where n.name =~ &amp;quot;Alexandre.*&amp;quot; return count(t);
+----------+
| count(t) |
+----------+
| 17 |
+----------+
1 row
255 ms
&lt;/code>&lt;/pre>&lt;p>I think that I didn&amp;rsquo;t impress anybody until here, but one of the ideas behind
graph DBs is easily find connections between entities, for example what do I
have in common with my friend &lt;a href="http://twitter.com/ipedrazas">@ipedrazas&lt;/a>? I
know that he likes beers as me, but I am talking about meetup.com relations,
let&amp;rsquo;s see!&lt;/p>
&lt;pre>&lt;code>neo4j-sh (?)$ match (n)-[]-(t:Topic)-[]-(m) where n.name =~ &amp;quot;Alexandre.*&amp;quot; and m.name =~ &amp;quot;Ivan Pedrazas&amp;quot; return t.name;
+----------------------+
| t.name |
+----------------------+
| &amp;quot;Open Source&amp;quot; |
| &amp;quot;Programming&amp;quot; |
| &amp;quot;Mobile Development&amp;quot; |
| &amp;quot;golang&amp;quot; |
+----------------------+
4 rows
91 ms
&lt;/code>&lt;/pre>&lt;p>Nice! But if you want to do it beautiful for your boss, you could as well use Cypher:&lt;/p>
&lt;p>&lt;img src="https://agonzalezro.github.io/dev/meetup_neo4j_example.png" alt="meetup_neo4j_example">&lt;/p>
&lt;p>Now imagine that I want to target the interest of my group by the things that
they like more, which ones are those?&lt;/p>
&lt;pre>&lt;code>neo4j-sh (?)$ match ()-[r]-&amp;gt;(t:Topic) with t, count(r) as rel return t.name order by rel desc limit 10;
+------------------------+
| t.name |
+------------------------+
| &amp;quot;Programming&amp;quot; |
| &amp;quot;Software Development&amp;quot; |
| &amp;quot;Open Source&amp;quot; |
| &amp;quot;New Technology&amp;quot; |
| &amp;quot;Technology&amp;quot; |
| &amp;quot;Web Development&amp;quot; |
| &amp;quot;Startup Businesses&amp;quot; |
| &amp;quot;Big Data&amp;quot; |
| &amp;quot;Cloud Computing&amp;quot; |
| &amp;quot;Internet Startups&amp;quot; |
+------------------------+
10 rows
99 ms
&lt;/code>&lt;/pre>&lt;p>They were kinda clear for this kind of geeky meetup :)&lt;/p>
&lt;p>Hope that you enjoyed, and if you have any more question or queries for the data,
ping me here or at &lt;a href="http://twitter.com/agonzalezro">@agonzalezro&lt;/a>.&lt;/p></description></item><item><title>Draw (and more) your architecture with Neo4J</title><link>https://agonzalezro.github.io/posts/neo4j_architecture/</link><pubDate>Tue, 26 Aug 2014 00:00:00 +0000</pubDate><guid>https://agonzalezro.github.io/posts/neo4j_architecture/</guid><description>
&lt;p>As some of you already know I work at &lt;a href="http://greenmangaming.com">Green Man
Gaming&lt;/a> (mainly at the
&lt;a href="http://playfire.com">playfire&lt;/a> project). We were planning to do some changes
in our architecture but it&amp;rsquo;s extremely hard to have an idea of all our services
and DBs in just a piece of A4 paper. I was trying, trust me, but it was
impossible.&lt;/p>
&lt;p>When I started with this task I did it with
&lt;a href="https://www.lucidchart.com">lucidchart&lt;/a>, after it got so messy I moved to
&lt;a href="http://www.graphviz.org/">graphviz&lt;/a>, but even with the usual good graphs that
I get from graphviz it was impossible to get something readable this time.&lt;/p>
&lt;p>So, it happened! I remembered &lt;a href="http://ivan.pedrazas.me/?p=280">this post&lt;/a> made
by my friend Iván and I thought, why not?&lt;/p>
&lt;p>Sadly, this post is not going to show any real data from GMG, but if you are
interested it&amp;rsquo;s the moment to apply because we are hiring &amp;amp; we have the graphs
around all the whiteboard in the office! Just grab me an email.&lt;/p>
&lt;h2 id="what-do-i-need">What do I need?&lt;/h2>
&lt;p>Basically, you just need Neo4J. You can install it however you want, I&amp;rsquo;ve just
run a Docker container with it:&lt;/p>
&lt;pre>&lt;code>docker run -d -p 7474:7474 tpires/neo4j
&lt;/code>&lt;/pre>
&lt;p>Now, if you access to your docker container at http://localhost:7474 (or using
the host from &lt;code>boot2docker ip&lt;/code> if you run docker with boot2docker) you will see
the cypher shell which is one of the ways that you can use to interact with
your DB.&lt;/p>
&lt;h2 id="what-i-am-going-to-draw">What I am going to draw?&lt;/h2>
&lt;p>In my case, and for a POC, I&amp;rsquo;ve written the following entities:&lt;/p>
&lt;ul>
&lt;li>Person&lt;/li>
&lt;li>Technology&lt;/li>
&lt;li>Service&lt;/li>
&lt;/ul>
&lt;p>You could write some other entities as for example DBs.&lt;/p>
&lt;p>The connections here are kinda clear: a person knows a technology which is
used to write a service that use a DB as backend, so, let&amp;rsquo;s write it!&lt;/p>
&lt;p>To create entities the syntax is as follow:&lt;/p>
&lt;pre>&lt;code>CREATE (variable:Type{attributes})
&lt;/code>&lt;/pre>
&lt;p>And to create Relations (one of the ways):&lt;/p>
&lt;pre>&lt;code>CREATE (variable1)-[:RELATION_NAME]-&amp;gt;(variable2)
&lt;/code>&lt;/pre>
&lt;p>You will understand this better after we start creating our entities.&lt;/p>
&lt;p>Create your engineers:&lt;/p>
&lt;pre>&lt;code>CREATE
(dev1:Person{name:&amp;quot;Alex&amp;quot;}),
(dev2:Person{name:&amp;quot;Maria&amp;quot;}),
(dev3:Person{name:&amp;quot;Pepe&amp;quot;}),
&lt;/code>&lt;/pre>
&lt;p>Before the : you can see that we have defined a variable to refer to this
just-created entities. All the nodes that we are creating here are of type
Person and each of them have a different name.&lt;/p>
&lt;p>To create the relationships between Technology and Person, we define the
technology using the same method that we used to create the Person, but we add
the relationships:&lt;/p>
&lt;pre>&lt;code>...
(python:Technology{name:&amp;quot;Python&amp;quot;}),
(go:Technology{name:&amp;quot;Go&amp;quot;}),
(dev1)-[:KNOWS]-&amp;gt;(python),
(dev1)-[:KNOWS]-&amp;gt;(go),
(dev2)-[:KNOWS]-&amp;gt;(python),
(dev3)-[:KNOWS]-&amp;gt;(go),
&lt;/code>&lt;/pre>
&lt;p>And finally, we add our services:&lt;/p>
&lt;pre>&lt;code>...
(service1:Service{name:&amp;quot;Service #1&amp;quot;}),
(service2:Service{name:&amp;quot;Service #2&amp;quot;}),
(service1)-[:CONNECTS]-&amp;gt;(service2),
(service1)-[:WRITTEN_WITH]-&amp;gt;(go),
(service2)-[:WRITTEN_WITH]-&amp;gt;(python)
&lt;/code>&lt;/pre>
&lt;h2 id="querying-for-drawing">Querying for drawing&lt;/h2>
&lt;p>Now, you can run all the script and we can see the result. For the first output
we are going just to show everything:&lt;/p>
&lt;pre>&lt;code>MATCH (n)-[r]-() RETURN n, r
&lt;/code>&lt;/pre>
&lt;p>And you will get this!&lt;/p>
&lt;p>&lt;img src="https://agonzalezro.github.io/biz/neo4j_architecture/1.png" alt="Cypher MATCH #1">&lt;/p>
&lt;p>So, what&amp;rsquo;s the point of all this? Basically, that you can do queries that will
make the graph smaller for your needs. This example data that we have added is
quite small (just few nodes), in the real graph that I am working on we have
already few dozens. For example, imagine that you just want to see python
related information:&lt;/p>
&lt;pre>&lt;code>MATCH (a)-[r]-() WHERE a.name=&amp;quot;Python&amp;quot; RETURN a, r
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://agonzalezro.github.io/biz/neo4j_architecture/2.png" alt="Cypher MATCH #2">&lt;/p>
&lt;p>Or you just want to see the people that can work with the Server #1&lt;/p>
&lt;pre>&lt;code>MATCH (s:Service)-[r]-()-[r2:KNOWS]-(p:Person)
WHERE s.name=&amp;quot;Service #1&amp;quot; RETURN s, p
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://agonzalezro.github.io/biz/neo4j_architecture/3.png" alt="Cypher MATCH #2">&lt;/p>
&lt;h2 id="one-more-thing">One more thing&lt;/h2>
&lt;p>For now, this project in my company is just a POC and I have not really clear
what attributes and entities I should draw to make this graph useful for the
present and for the future. If you have previous experiences or you want to
start a brainstorming, write on the comments or &lt;a href="http://twitter.com/agonzalezro">find me at
twitter&lt;/a>.&lt;/p>
&lt;p>Also, for now I am happy with just creating some screenshots from the data that
Cypher is showing to me, but it would be really nice to find a more
professional way of sharing this graphs. Cypher renders them with D3, so, I
don&amp;rsquo;t fully understand why it doesn&amp;rsquo;t support exporting them in a easy way.
Again, if you know something, just let me know.&lt;/p></description></item></channel></rss>